@using HajurkoCarRental.Areas.Identity.Data;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<HajurkoCarRentalUser> UserManager
@inject SignInManager<HajurkoCarRentalUser> SignInManager;


@model HajurkoCarRental.Models.Order

@{
    ViewData["Title"] = "Create";
}

<h1>Place Your Order</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger" ></div>
            <div class="form-group" style="display:none" >
                <label asp-for="CarId" class="control-label"></label>
                <input asp-for="CarId" class="form-control" value="@ViewBag.CarId"/>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="CustomerId" class="control-label"></label>
                <input asp-for="CustomerId" class="form-control" value="@UserManager.GetUserId(User)"/>
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" class="form-control" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReturnDate" class="control-label"></label>
                <input asp-for="ReturnDate" class="form-control" />
                <span asp-validation-for="ReturnDate" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="Status" class="control-label"></label>
                <input asp-for="Status" class="form-control" value="Pending"/>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Place Order" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
@if( User.IsInRole("Admin"))
{
    
<div>
    <a asp-action="Index">Back to List</a>
</div>
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        $(document).ready(function () {
            // Get the order date and return date fields
            var orderDate = $('#OrderDate');
            var returnDate = $('#ReturnDate');

            // Set the minimum order date to today
            orderDate.attr('min', new Date().toISOString().slice(0, 10));

            // Validate the form when the submit button is clicked
            $('form').submit(function () {
                // Parse the order and return dates as Date objects
                var orderDateValue = new Date(orderDate.val());
                var returnDateValue = new Date(returnDate.val());

                // Check if the order date is before today
                if (orderDateValue < new Date()) {
                    alert('Order date cannot be before today');
                    return false;
                }

                // Check if the return date is before the order date
                if (returnDateValue <= orderDateValue) {
                    alert('Return date must be after order date');
                    return false;
                }

                return true;
            });
        });
    </script>
}

